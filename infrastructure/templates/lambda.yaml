Resources:
  DocumentQALambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: DocumentQALambda
      Handler: api.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaCodeBucket
        S3Key: lambda_code.zip
      Runtime: python3.8
      MemorySize: 128
      Timeout: 30
      Environment:
        S3_BUCKET: !Ref DocumentBucket
        VECTOR_DB_URI: !Ref VectorDBUri
        SAGEMAKER_ENDPOINT: !Ref SageMakerEndpoint
      Tags:
        - Key: Project
          Value: DocumentQA

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - textract:DetectDocumentText
                  - textract:GetDocumentTextDetection
                  - sagemaker:InvokeEndpoint
                Resource: "*"

Outputs:
  LambdaFunctionArn:
    Description: "ARN of the Document QA Lambda Function"
    Value: !GetAtt DocumentQALambdaFunction.Arn